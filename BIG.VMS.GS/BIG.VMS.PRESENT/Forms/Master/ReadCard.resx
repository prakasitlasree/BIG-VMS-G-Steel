<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEACADIBgAAFgAAACgAAAAYAAAAMAAAAAEACAAAAAAAoAIAAAAAAAAAAAAAAAEAAAAA
        AADy1psA6rZSANqLGwBya2sA/NV7AOaeKgD2zW0AAAAAAPr6+gDZ19cA9vb2ANfV1ADV09MA8tmjALS3
        vgDNyskA1IEDAJmUkwCTjo0AeXNyAK6rqQC0VAEA3Ks9AKqmpQBvbGsAd3NyAM7MygDrqS4AwcbOANrZ
        2ADk4+IA3o0AAPC2PgD2+f8A/Nl9ANB6AQDv7u4A7u7tAKlFAADw7+8A5uXkAKpPCQDlmhIA4N7cAN7c
        2wDd2tkA09HPANHOzQDy1qIAlZKSAOqhKQB9eXgA9Pf/APTz8gDz8vEA8fHwAOzq6gDp6OcAioaFADg2
        NgDn5uUA3IUAANjW1ADX1NMAYV9eAOqgJwDonycA7LVNAJGMiwCRi4oAWVdWAN6JAABQTk4AfXuBAIiG
        gwDo5+YA7ezqAJ2YmADl5OMApKKgANiGGAC4srEA8fDvANzb2gDc3d0A4uLhAOKWIgDV1NMAzMvMAPz/
        /wDY1dQAk5GMAOPi4gDq6ukA4eDfANLPzgDi4N8A1NHQAN/c3ADq6egAcXBtAOHBiQDvulgA8ch0APnO
        aACmo6IA5JkKAO/EaACqTAMA+vr5AP/rsADit2QAwr69APv8/ADzzX4ArqmmAFFPUADPzcwA48B+AO32
        /wDOdhAA++CfALWyrwD91HEA5r1pANqwYwDrrDMAxMLBAOLg3QDwuEUAyMfFAMrHxgAvLS0A4NvRAOqp
        KwDgsV0Au7u4AHh3fQDfvHgAd3V7AK1QDADQewQA5MOCAOnDgADsy4MA8sVhAN2RIAD3ymEA99aNAOCY
        JAClQQAA5Z4WAOmsQQCmSgUA5aI0AOijMgCCe3oAhoOCAEM/QAD62IAA1IIKAP7eiADit24Ay8rKAMHI
        1ADww10A4JwwANeiNgDXojwA2aQ4AMu8qgBlYWEAamRjAGtoZwCwpZMA1ocQAOC5cwDSz80A/uKRAMTD
        uQD53JoAv2gCANrX1gBTUVIA56g6AFtZVwBdXFoAnpybAPX19AD29fQA9vX2APXAUwD0/f8A6rBHAPn5
        +ABjYF4A2apWANyuXwD70GwA5+bmAO7t7ADnoS8At7GwAOmhIQD8/PwA4uHgAPW+UAD49vgA4eHiALu0
        tADxyXgAwGgBAMNsDwD603EA+tR1AOS6awDmvW4A2NbVANXV1gDs6+oA66gwAOyuMwC+ZQ8A56UjALCq
        pwCwrq0AyMXGAOSfLgDy8fEA/uOpAP7oqQDivHgA2djXAMfGwwBIRkcA8tegAPLXowDgjwAAl5WTAOy+
        WwD0ukkA6J8QAPT08wDJxsYA4saKALGwtgAxLi4A3LJqAN23bADh394A4NzVAN20ZQCOjIoA29rZAP//
        /wD///8ABwebBpGlZgFDwZi4muOVkgKvoBAQKQcHBwfJoSIiBNbVkNjXb4d8IN2G35fxbAcHBwdCwDQ0
        ISFZ9YtJSYkO/v7+/v7+JgcHBwdCJyc35DZtFBkzMxPh/ggIccz+JgcHBwdCTEzIJSS+aQMZEwMXcbwK
        Cgr+JgcHBwdBS0s5Y102u6wYZEhPwuQ2NfJZJgcHBwdBHh5OKDwk7kCtq55NvSUkJ1JSJgcHBwdBXl7N
        VVzb/LlAw7pbUmNdOExMJgcHBwcyU1MsYis5nXRGRrdKJSg8x0tLJgcHBwcytrbo6B0eM+pISOqc21Vc
        Hk5OJgcHBwcyDAxXCwsrGIQ7O/YYTmIr+WBgJgcHBwcyLy+xLi4LdT9a2T5fLR39U1RUlgcHB0MqfU+j
        GhovYbZTLCzZVwsLCQkW7dMHB9Jry8VP84MPiDpFRTpaXy4MDBY97bUHB9wAZxv7TX/p0RIRERJhD1hY
        qT0fjZkHBwcFAHIg+E1wehIRERIaglGnPR+NKQcHBwcHBQCU8LBbFEQxMUTiUahHRyOMBwcHBwcHB1br
        lL/nShdz4BRNxCpqsxUHBwcHBwcHBwdW7LSTdkrKUUr3fhv6pAcHBwcHBwcHBwcHAg15xo5KSorOgc/Q
        HAcHBwcHBwcHBwcHB1AN5Xv0ZWgGpv6AHAcHBwcHBwcHBwcHBwdQ7OYEBJ8BFXfaDgcHBwcHBwcHBwcH
        BwcHUDBusu/eB4WqrgcHBwcHBwcHBwcHBwcHB3iPotQHBwcHBwcHBwcHwAADAMAAAwDAAAMAwAADAMAA
        AwDAAAMAwAADAMAAAwDAAAMAwAADAMAAAwDAAAMAgAABAIAAAQCAAAEAwAADAOAABwDwAA8A+AAfAPwA
        HwD+AB8A/wAfAP+BHwD/w/8A
</value>
  </data>
</root>